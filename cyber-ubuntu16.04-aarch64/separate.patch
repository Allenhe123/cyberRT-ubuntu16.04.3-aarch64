diff --git a/cyber/base/atomic_hash_map_test.cc b/cyber/base/atomic_hash_map_test.cc
old mode 100644
new mode 100755
index 4501988c2..8075761d5
--- a/cyber/base/atomic_hash_map_test.cc
+++ b/cyber/base/atomic_hash_map_test.cc
@@ -15,6 +15,7 @@
  *****************************************************************************/
 
 #include "cyber/base/atomic_hash_map.h"
+#include "cyber/base/macros.h"
 
 #include <string>
 #include <thread>
@@ -69,11 +70,7 @@ TEST(AtomicHashMapTest, concurrency) {
   for (int i = 0; i < thread_num; i++) {
     t[i] = std::thread([&, i]() {
       while (!ready) {
-#if defined(__aarch64__)
-        asm volatile("yield" ::: "memory");
-#else
-        asm volatile("rep; nop" ::: "memory");
-#endif
+        cpu_relax();
       }
       for (int j = 0; j < thread_num * 1024; j++) {
         auto j_str = std::to_string(j);
diff --git a/cyber/base/macros.h b/cyber/base/macros.h
old mode 100644
new mode 100755
index 4f667870c..d31910a4f
--- a/cyber/base/macros.h
+++ b/cyber/base/macros.h
@@ -46,13 +46,24 @@
   template <typename T>                                          \
   constexpr bool name<T>::value;
 
-inline void cpu_relax() {
-#if defined(__aarch64__)
-  asm volatile("yield" ::: "memory");
+
+/**
+
+ * cpu_relax is an architecture specific method of telling the CPU that you don't want it to
+
+ * do much work. asm volatile keeps the compiler from optimising these instructions out.
+
+ */
+
+#if defined(__i386__) || defined(__x86_64__)
+inline void cpu_relax() { asm volatile("rep; nop" ::: "memory"); }
+#elif defined(__arm__) || defined(__mips__)
+inline void cpu_relax() { asm volatile("":::"memory"); }
+#elif defined(__aarch64__)
+inline void cpu_relax() { asm volatile("yield" ::: "memory"); }
 #else
-  asm volatile("rep; nop" ::: "memory");
+#error "cpu_relax is not defined for this architecture"
 #endif
-}
 
 inline void* CheckedMalloc(size_t size) {
   void* ptr = std::malloc(size);
diff --git a/cyber/class_loader/class_loader.h b/cyber/class_loader/class_loader.h
old mode 100644
new mode 100755
diff --git a/cyber/common/log.h b/cyber/common/log.h
old mode 100644
new mode 100755
index 09b89ab61..892b788f3
--- a/cyber/common/log.h
+++ b/cyber/common/log.h
@@ -18,7 +18,8 @@
  * @log
  */
 
-#pragma once
+#ifndef CYBER_COMMON_LOG_H_
+#define CYBER_COMMON_LOG_H_
 
 #include <stdarg.h>
 
@@ -34,7 +35,7 @@
 #endif
 
 #define ADEBUG_MODULE(module) \
-  VLOG(4) << LEFT_BRACKET << module << RIGHT_BRACKET << "[DEBUG] "
+  VLOG(4) << LEFT_BRACKET << MODULE_NAME << RIGHT_BRACKET << "[DEBUG] "
 #define ADEBUG ADEBUG_MODULE(MODULE_NAME)
 #define AINFO ALOG_MODULE(MODULE_NAME, INFO)
 #define AWARN ALOG_MODULE(MODULE_NAME, WARN)
@@ -106,3 +107,5 @@
     AWARN << #condition << " is not met."; \
     return val;                            \
   }
+
+#endif  // CYBER_COMMON_LOG_H_
diff --git a/cyber/conf/cyber.pb.conf b/cyber/conf/cyber.pb.conf
old mode 100644
new mode 100755
index 080122924..59732a635
--- a/cyber/conf/cyber.pb.conf
+++ b/cyber/conf/cyber.pb.conf
@@ -1,27 +1,27 @@
-# transport_conf {
-#     shm_conf {
-#         # "multicast" "condition"
-#         notifier_type: "multicast"
-#         shm_locator {
-#             ip: "239.255.0.100"
-#             port: 8888
-#         }
-#     }
-#     participant_attr {
-#         lease_duration: 12
-#         announcement_period: 3
-#         domain_id_gain: 200
-#         port_base: 10000
-#     }
-#     communication_mode {
-#         same_proc: INTRA
-#         diff_proc: SHM
-#         diff_host: RTPS
-#     }
-#     resource_limit {
-#         max_history_depth: 1000
-#     }
-# }
+transport_conf {
+    shm_conf {
+        # "multicast" "condition"
+        notifier_type: "condition"
+        shm_locator {
+            ip: "239.255.0.100"
+            port: 8888
+        }
+    }
+    participant_attr {
+        lease_duration: 12
+        announcement_period: 3
+        domain_id_gain: 200
+        port_base: 10000
+    }
+    communication_mode {
+        same_proc: INTRA
+        diff_proc: SHM
+        diff_host: RTPS
+    }
+    resource_limit {
+        max_history_depth: 1000
+    }
+}
 
 run_mode_conf {
     run_mode: MODE_REALITY
diff --git a/cyber/setup.bash b/cyber/setup.bash
index 32cdd805c..9ae527092 100755
--- a/cyber/setup.bash
+++ b/cyber/setup.bash
@@ -1,28 +1,28 @@
 export CYBER_PATH=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-binary_path="/apollo/bazel-bin/cyber"
-cyber_tool_path="/apollo/bazel-bin/cyber/tools"
-apollo_tool_path="/apollo/bazel-bin/modules/tools"
-recorder_path="${cyber_tool_path}/cyber_recorder"
-monitor_path="${cyber_tool_path}/cyber_monitor"
-visualizer_path="${apollo_tool_path}/visualizer"
-PYTHON_LD_PATH="/apollo/bazel-bin/cyber/py_wrapper"
+#binary_path="/apollo/bazel-bin/cyber"
+#cyber_tool_path="/apollo/bazel-bin/cyber/tools"
+#apollo_tool_path="/apollo/bazel-bin/modules/tools"
+#recorder_path="${cyber_tool_path}/cyber_recorder"
+#monitor_path="${cyber_tool_path}/cyber_monitor"
+#visualizer_path="${apollo_tool_path}/visualizer"
+#PYTHON_LD_PATH="/apollo/bazel-bin/cyber/py_wrapper"
 launch_path="${CYBER_PATH}/tools/cyber_launch"
 channel_path="${CYBER_PATH}/tools/cyber_channel"
 node_path="${CYBER_PATH}/tools/cyber_node"
 service_path="${CYBER_PATH}/tools/cyber_service"
-qt_path=/usr/local/Qt5.5.1/5.5/gcc_64
-rosbag_to_record_path="/apollo/bazel-bin/modules/data/tools/rosbag_to_record"
+#qt_path=/usr/local/Qt5.5.1/5.5/gcc_64
+#rosbag_to_record_path="/apollo/bazel-bin/modules/data/tools/rosbag_to_record"
 
 
-export LD_LIBRARY_PATH=${qt_path}/lib:$LD_LIBRARY_PATH
-export QT_QPA_PLATFORM_PLUGIN_PATH=${qt_path}/plugins
-export PATH=${binary_path}:${recorder_path}:${monitor_path}:${launch_path}:${channel_path}:${node_path}:${service_path}:${qt_path}/bin:${visualizer_path}:${rosbag_to_record_path}:$PATH
-export PYTHONPATH=${PYTHON_LD_PATH}:${CYBER_PATH}/python:$PYTHONPATH
+#export LD_LIBRARY_PATH=${qt_path}/lib:$LD_LIBRARY_PATH
+#export QT_QPA_PLATFORM_PLUGIN_PATH=${qt_path}/plugins
+#export PATH=${binary_path}:${recorder_path}:${monitor_path}:${launch_path}:${channel_path}:${qt_path}/bin:${visualizer_path}:${rosbag_to_record_path}:$PATH
+#export PYTHONPATH=${PYTHON_LD_PATH}:${CYBER_PATH}/python:$PYTHONPATH
 
 export CYBER_DOMAIN_ID=80
 export CYBER_IP=127.0.0.1
 
-export GLOG_log_dir=/apollo/data/log
+export GLOG_log_dir=/home/root/log
 export GLOG_alsologtostderr=0
 export GLOG_colorlogtostderr=1
 export GLOG_minloglevel=0
